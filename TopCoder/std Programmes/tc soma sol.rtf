{\rtf1\ansi\ansicpg936\deff0\nouicompat\deflang1033\deflangfe2052{\fonttbl{\f0\fnil\fcharset134 \'cb\'ce\'cc\'e5;}}
{\*\generator Riched20 10.0.16299}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang2052 #define E end()\par
#define R erase\par
#define S size()\par
#define I insert\par
#define C clear()\par
#define B begin()\par
#define L length()\par
#define P push_back\par
#define O count\par
#define F find\par
#define fill(a) memset(a,0,sizeof(a))\par
#define rep(i,n) for(int i=0;i!=n;++i)\par
#define fab(i,a,b) for(int i=a;i<=b;++i)\par
#define fba(i,a,b) for(int i=a;i>=b;--i)\par
#define fec(i,a) for(typeof((a).B)i=(a).B;i!=(a).E;++i)\par
#define s2i(s,a,b) atoi((s).substr((a),(b)).c_str())\par
#define s2f(s,a,b) atof((s).substr((a),(b)).c_str())\par
using namespace std;\par
const int MX = 0x7FFFFFFF;\par
const int HX = 0x3F3F3F3F;\par
typedef vector<int> vi;\par
typedef vector<vi> vvi;\par
typedef vector<string> vs;\par
typedef long long i64;\par
///////////////////////////\par
\par
bool a[35][35][35]; //\'ca\'e4\'c8\'eb\'b5\'c4\'b5\'e3\'bc\'af\par
set<vvi> s[7]; //\'bc\'c7\'c2\'bc\'cb\'f9\'d3\'d0\'bb\'fd\'c4\'be\'b5\'c4\'cb\'f9\'d3\'d0\'b1\'e4\'bb\'af\'a3\'a8\'d4\'a4\'b4\'a6\'c0\'ed\'a3\'a9\par
set<vi> a2; //\'b6\'d4\'ca\'e4\'c8\'eb\'b5\'c4\'b5\'e3\'bd\'f8\'d0\'d0\'d7\'f8\'b1\'ea\'c5\'c5\'d0\'f2\'a3\'a8\'d4\'a4\'b4\'a6\'c0\'ed\'a3\'a9\par
int a3[30][3]; //\'b6\'d4\'ca\'e4\'c8\'eb\'b5\'c4\'b5\'e3\'bd\'f8\'d0\'d0\'d7\'f8\'b1\'ea\'c5\'c5\'d0\'f2\'a3\'a8\'cb\'d1\'cb\'f7\'a3\'a9\par
int f[7][24][4][3]; //\'bc\'c7\'c2\'bc\'cb\'f9\'d3\'d0\'bb\'fd\'c4\'be\'b5\'c4\'cb\'f9\'d3\'d0\'b1\'e4\'bb\'af\'a3\'a8\'cb\'d1\'cb\'f7\'a3\'a9\par
int fc[7]; //\'d0\'ce\'d7\'b4\'b5\'c4\'b1\'e4\'bb\'af\'ca\'fd\par
int fd[7]; //\'d0\'ce\'d7\'b4\'b5\'c4\'cc\'e5\'bb\'fd\par
\par
int ans;\par
\par
//STL\'b4\'a6\'c0\'ed\'b7\'bd\'b1\'e3 \'b5\'ab\'ca\'c7\'cb\'d9\'b6\'c8\'c2\'fd\par
//\'c4\'da\'d6\'c3\'ca\'fd\'d7\'e9\'b4\'a6\'c0\'ed\'bd\'cf\'b8\'b4\'d4\'d3 \'b5\'ab\'ca\'c7\'cb\'d9\'b6\'c8\'bf\'ec\par
\par
//\'d2\'f2\'b4\'cb\'d4\'da\'ca\'b1\'bc\'e4\'b2\'bb\'bd\'f4\'b5\'c4\'d4\'a4\'b4\'a6\'c0\'ed\'b9\'fd\'b3\'cc\'d6\'d0 \'be\'a1\'bf\'c9\'c4\'dc\'b5\'c4\'ca\'b9\'d3\'c3STL\'c4\'a3\'b0\'e5\par
//\'d4\'da\'cb\'d1\'cb\'f7\'d6\'d0\'be\'a1\'bf\'c9\'c4\'dc\'ca\'b9\'d3\'c3\'b1\'ea\'d7\'bc\'b5\'c4\'ca\'fd\'d7\'e9\'ba\'cd\'d6\'b8\'d5\'eb\par
\par
inline vi p2v(int x, int y, int z) // \'d7\'aa\'c0\'e0\'d0\'cd x y z  To  vector<int>\par
\{\par
\tab vi tp; tp.P(x); tp.P(y); tp.P(z);\par
\tab return tp;\par
\}\par
\par
inline void srt(vvi &v) // \'b6\'d4\'b7\'bd\'bf\'e9\'d0\'f2\'c1\'d0\'c5\'c5\'d0\'f2\'a3\'ac\'b2\'a2\'b2\'c9\'d3\'c3\'d7\'ee\'d0\'a1\'b1\'ed\'ca\'be\'b7\'a8 locate to (0,0,0)\par
\{\par
\tab sort(v.B, v.E);\par
\tab vi u = *v.B;\par
\tab fec(w, v)\par
\tab\tab (*w)[0] -= u[0], (*w)[1] -= u[1], (*w)[2] -= u[2];\par
\}\par
\par
inline void rot1(vvi &v) // \'cf\'f2\'c7\'b0\'b7\'ad\'b9\'f690\'b6\'c8 front roll\par
\{\par
\tab vi u(3);\par
\tab fec(w, v)\par
\tab\tab u[0] = (*w)[0], u[1] = (*w)[2], u[2] = -(*w)[1], *w = u;\par
\tab srt(v);\par
\}\par
inline void rot2(vvi &v) // \'cf\'f2\'d7\'f3\'b7\'ad\'b9\'f690\'b6\'c8 left roll\par
\{\par
\tab vi u(3);\par
\tab fec(w, v)\par
\tab\tab u[0] = -(*w)[2], u[1] = (*w)[1], u[2] = (*w)[0], *w = u;\par
\tab srt(v);\par
\}\par
inline void rot3(vvi &v) // \'cb\'b3\'ca\'b1\'d5\'eb\'d0\'fd\'d7\'aa90\'b6\'c8 clockwise rotate\par
\{\par
\tab vi u(3);\par
\tab fec(w, v)\par
\tab\tab u[0] = (*w)[1], u[1] = -(*w)[0], u[2] = (*w)[2], *w = u;\par
\tab srt(v);\par
\}\par
\par
inline void doit(int num, vvi o) // \'c9\'fa\'b3\'c9 24 \'d6\'d6\'ca\'d3\'bd\'c7  set\'bb\'e1\'d7\'d4\'b6\'af\'c5\'d0\'d6\'d8\par
\{\par
\tab rep(k, 3)\par
\tab\{\par
\tab\tab rep(i, 4) \{ rot1(o); s[num].I(o); \}\par
\tab\tab rot2(o);\par
\tab\}\par
\tab rep(k, 2)\par
\tab\{\par
\tab\tab rep(i, 4) \{ rot1(o); s[num].I(o); \}\par
\tab\tab rot3(o);\par
\tab\}\par
\tab rot3(o);\par
\tab rep(i, 4) \{ rot1(o); s[num].I(o); \}\par
\par
\tab int k = 0;\par
\tab fec(i, s[num])\par
\tab\{\par
\tab\tab int p = 0;\par
\tab\tab fec(j, *i)\par
\tab\tab\{\par
\tab\tab\tab f[num][k][p][0] = (*j)[0];\par
\tab\tab\tab f[num][k][p][1] = (*j)[1];\par
\tab\tab\tab f[num][k][p][2] = (*j)[2];\par
\tab\tab\tab ++p;\par
\tab\tab\}\par
\tab\tab ++k;\par
\tab\}\par
\}\par
\par
void prepare() // \'bb\'fd\'c4\'be\'d4\'a4\'b4\'a6\'c0\'ed\par
\{\par
\tab //  111\par
\tab //  1\par
\tab s[0].C;\par
\tab vvi o(0);\par
\tab o.P(p2v(0,0,0));\par
\tab o.P(p2v(1,0,0));\par
\tab o.P(p2v(2,0,0));\par
\tab o.P(p2v(0,-1,0));\par
\tab doit(0, o);\par
\par
\tab fc[0] = 24;\par
\tab fd[0] = 4;\par
\par
\tab //  111\par
\tab //   1\par
\tab s[1].C;\par
\tab o.C;\par
\tab o.P(p2v(0,0,0));\par
\tab o.P(p2v(1,0,0));\par
\tab o.P(p2v(2,0,0));\par
\tab o.P(p2v(1,-1,0));\par
\tab doit(1, o);\par
\par
\tab fc[1] = 12;\par
\tab fd[1] = 4;\par
\par
\tab //   11\par
\tab //  11\par
\tab s[2].C;\par
\tab o.C;\par
\tab o.P(p2v(1,0,0));\par
\tab o.P(p2v(2,0,0));\par
\tab o.P(p2v(0,-1,0));\par
\tab o.P(p2v(1,-1,0));\par
\tab doit(2, o);\par
\par
\tab fc[2] = 12;\par
\tab fd[2] = 4;\par
\par
\tab\par
\tab //   11\par
\tab //   1\par
\tab s[3].C;\par
\tab o.C;\par
\tab o.P(p2v(0,0,0));\par
\tab o.P(p2v(1,0,0));\par
\tab o.P(p2v(0,-1,0));\par
\tab doit(3, o);\par
\par
\tab fc[3] = 12;\par
\tab fd[3] = 3;\par
\par
\tab\par
\tab //   2\par
\tab //  11\par
\tab s[4].C;\par
\tab o.C;\par
\tab o.P(p2v(1,0,0));\par
\tab o.P(p2v(1,0,1));\par
\tab o.P(p2v(0,-1,0));\par
\tab o.P(p2v(1,-1,0));\par
\tab doit(4, o);\par
\par
\tab fc[4] = 12;\par
\tab fd[4] = 4;\par
\par
\tab\par
\tab //  2\par
\tab //  11\par
\tab s[5].C;\par
\tab o.C;\par
\tab o.P(p2v(0,0,0));\par
\tab o.P(p2v(0,0,1));\par
\tab o.P(p2v(0,-1,0));\par
\tab o.P(p2v(1,-1,0));\par
\tab doit(5, o);\par
\par
\tab fc[5] = 12;\par
\tab fd[5] = 4;\par
\par
\tab\par
\tab //  12\par
\tab //   1\par
\tab s[6].C;\par
\tab o.C;\par
\tab o.P(p2v(1,0,0));\par
\tab o.P(p2v(1,0,1));\par
\tab o.P(p2v(0,0,0));\par
\tab o.P(p2v(1,-1,0));\par
\tab doit(6, o);\par
\par
\tab fc[6] = 8;\par
\tab fd[6] = 4;\par
\par
\}\par
\par
void sc(int uu)  //\'cb\'d1\'cb\'f7\'d6\'f7\'b9\'fd\'b3\'cc  uu\'b1\'ed\'ca\'be\'bb\'b9\'c3\'bb\'d3\'c3\'b5\'c4\'bb\'fd\'c4\'be\'b5\'c4\'bc\'af\'ba\'cf \'a3\'a8\'ce\'bb\'d1\'b9\'cb\'f5\'a3\'a9\par
\{\par
\tab int ox, oy, oz;\par
\tab rep(i, 27) //\'b4\'d3\'d4\'a4\'cf\'c8\'c5\'c5\'d0\'f2\'b5\'c4\'ca\'fd\'d7\'e9\'c0\'ef\'d5\'d2\'b5\'da\'d2\'bb\'b8\'f6\'bb\'b9\'c3\'bb\'cc\'ee\'b5\'c4\'b8\'f1\'d7\'d3 \'a3\'a8\'d7\'d6\'b5\'e4\'d0\'f2\'d7\'ee\'d0\'a1\'b5\'c4\'b8\'f1\'d7\'d3\'a3\'a9\par
\tab\tab if (a[a3[i][0]][a3[i][1]][a3[i][2]])\par
\tab\tab\{\par
\tab\tab\tab ox = a3[i][0];\par
\tab\tab\tab oy = a3[i][1];\par
\tab\tab\tab oz = a3[i][2];\par
\tab\tab\tab break;\par
\tab\tab\}\par
\tab rep(i, 7) if ((1 << i) & uu) //\'c3\'b6\'be\'d9\'bf\'c9\'d2\'d4\'d3\'c3\'b5\'c4\'bb\'fd\'c4\'be\par
\tab\tab rep(p, fc[i]) //\'c3\'b6\'be\'d9\'bb\'fd\'c4\'be\'b5\'c4\'b1\'e4\'bb\'af\par
\tab\tab\{\par
\tab\tab\tab bool ok = true;\par
\tab\tab\tab rep(q, fd[i]) //\'bc\'ec\'b2\'e9\'ca\'c7\'b7\'f1\'ca\'ca\'ba\'cf\par
\tab\tab\tab\{\par
\tab\tab\tab\tab int *ap = f[i][p][q];\par
\tab\tab\tab\tab if (!a[ap[0] + ox][ap[1] + oy][ap[2] + oz])\par
\tab\tab\tab\tab\{ ok = false; break; \}\par
\tab\tab\tab\}\par
\tab\tab\tab if (ok && uu == (1 << i)) //\'d6\'d5\'d6\'b9\'cc\'f5\'bc\'fe\par
\tab\tab\tab\tab ++ans; else\par
\tab\tab\tab if (ok)\par
\tab\tab\tab\{\par
\tab\tab\tab\tab rep(q, fd[i]) //\'b8\'b2\'b8\'c7\'bf\'d5\'b8\'f1\par
\tab\tab\tab\tab\{\par
\tab\tab\tab\tab\tab int *ap = f[i][p][q];\par
\tab\tab\tab\tab\tab a[ap[0] + ox][ap[1] + oy][ap[2] + oz] = false;\par
\tab\tab\tab\tab\}\par
\tab\tab\tab\tab sc(uu - (1 << i)); //\'cf\'c2\'d2\'bb\'b2\'e3\'cb\'d1\'cb\'f7\par
\tab\tab\tab\tab rep(q, fd[i]) //\'bb\'d8\'cb\'dd\par
\tab\tab\tab\tab\{\par
\tab\tab\tab\tab\tab int *ap = f[i][p][q];\par
\tab\tab\tab\tab\tab a[ap[0] + ox][ap[1] + oy][ap[2] + oz] = true;\par
\tab\tab\tab\tab\}\par
\tab\tab\tab\}\par
\tab\tab\}\par
\}\par
\par
struct Soma\par
\{\par
\tab int letMeCountTheWays(vs aa)\par
\tab\{\par
\tab\tab prepare();\par
\tab\tab fill(a);\par
\tab\tab a2.C;\par
\tab\tab rep(i, aa.S) rep(j, aa[0].S) rep(k, aa[i][j] - '0')\par
\tab\tab\{ //\'bd\'a8\'c1\'a23\'ce\'ac\'b2\'bc\'b6\'fb\'ca\'fd\'d7\'e9\'a3\'a8a\'a3\'a9 \'d2\'d4\'bc\'b0\'c5\'c5\'d0\'f2\'b5\'c4\'d7\'f8\'b1\'ea\'ca\'fd\'d7\'e9\'a3\'a8a3\'a3\'a9\par
\tab\tab\tab a[i+2][j+2][k+2] = true;\par
\tab\tab\tab a2.I(p2v(i+2,j+2,k+2));\par
\tab\tab\}\par
\tab\tab fill(a3);\par
\tab\tab int i = 0;\par
\tab\tab fec(k, a2)\par
\tab\tab\{\par
\tab\tab\tab a3[i][0] = (*k)[0];\par
\tab\tab\tab a3[i][1] = (*k)[1];\par
\tab\tab\tab a3[i][2] = (*k)[2];\par
\tab\tab\tab ++i;\par
\tab\tab\}\par
\tab\tab ans = 0;\par
\tab\tab sc((1<<7)-1);\par
\tab\tab return ans;\par
\tab\}\par
\};\par
/*\par
ifstream fin("198.in");\par
ofstream fou("198.out");\par
int main()\par
\{\par
\tab int n;\par
\tab fin >> n;\par
\tab vs ss(n);\par
\tab fin.get();\par
\tab fec(i, ss) getline(fin, *i);\par
\tab Soma cl;\par
\tab fou << cl.letMeCountTheWays(ss) << endl;\par
\}\par
\par
\par
*/\par
}
 